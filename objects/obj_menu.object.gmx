<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Innit</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = false;
currentMenu = "main"; // "main", "item", "skill", "equip", "status" "equipType" "player", "question"
targetMenu = "" // menu wished to open after choosing player.
lastMenu = "" // menu visited last (used for items mainly);
alarm[0] = 10;

myOption = 0;
itemOption = 0;
playerOption = 1;
skillOption = 0;
questionOption = 0;
itemDropOption = 0;
equipOption = 0
equipTypeOption = 0;
statusPage = 0;

questionType = "" // "drop" "quit"
question = ""
answer1 = ""
answer2 = ""

playerCasting = 0 // selected player casting the skill
playerChosen = 0; // for skill, status and equip menus - 1 2 or 3, 0(nil) by default
canSelect = false;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Menu Option Data</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Main Menu
mainMenu[0,0] = "" // name
mainMenu[0,1] = 0 // x value
mainMenu[0,2] = 0 // y value

mainMenu[1,0] = "Item"
mainMenu[1,1] = 332
mainMenu[1,2] = 30

mainMenu[2,0] = "Skill"
mainMenu[2,1] = 332
mainMenu[2,2] = 54

mainMenu[3,0] = "Equip"
mainMenu[3,1] = 332
mainMenu[3,2] = 78

mainMenu[4,0] = "Status"
mainMenu[4,1] = 332
mainMenu[4,2] = 102

mainMenu[5,0] = "Save"
mainMenu[5,1] = 332
mainMenu[5,2] = 126

mainMenu[6,0] = "Load"
mainMenu[6,1] = 332
mainMenu[6,2] = 150

mainMenu[7,0] = "Quit"
mainMenu[7,1] = 332
mainMenu[7,2] = 174

/*------------------------------------------------------------------*/

playerMenu[1,0] = global.name[1]
playerMenu[1,1] = 24
playerMenu[1,2] = 32

playerMenu[2,0] = global.name[2]
playerMenu[2,1] = 24
playerMenu[2,2] = 96

playerMenu[3,0] = global.name[3]
playerMenu[3,1] = 24
playerMenu[3,2] = 160

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>button press clear</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = true;
canSelect = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>getKeys</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Return to field</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// return to field
if (start) &amp;&amp; canMove{
    with obj_npc_move{alarm[2] = 2}
    global.gameMove = true;
    myRoom = asset_get_index(global.field_room);
    room_goto(myRoom);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Navigate Options</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canMove &amp;&amp; currentMenu == "main"{
    // appear cursor
    if (up || down) &amp;&amp; !canSelect{
        canSelect = true;
        myOption = 0;
    }
    
    // go up and down main menu
    if (down &amp;&amp; myOption &lt; 7) &amp;&amp; canSelect {
        myOption += 1;
        canMove = false;
        alarm[0] = 5;
    }else if up &amp;&amp; myOption &gt; 1 &amp;&amp; canSelect{
        myOption -= 1;
        canMove = false;
        alarm[0] = 5;
    }
}else if canMove &amp;&amp; currentMenu == "item"{
    // appear cursor
    if (up || down) &amp;&amp; !canSelect{
        canSelect = true;
        itemOption = 0;
    }
    
    // go up and down main menu
    if (down &amp;&amp; itemOption &lt; 64 &amp;&amp; canSelect) {
        itemOption += 1;
        canMove = false;
        alarm[0] = 5;
    }else if up &amp;&amp; itemOption &gt; 0 &amp;&amp; canSelect{
        itemOption -= 1;
        canMove = false;
        alarm[0] = 5;
    }   
}else if canMove &amp;&amp; currentMenu == "equip"{
    // appear cursor
    if (up || down) &amp;&amp; !canSelect{
        canSelect = true;
        equipOption = 0;
    }
    
    // go up and down main menu
    if (down &amp;&amp; equipOption &lt; 64 &amp;&amp; canSelect) {
        equipOption += 1;
        canMove = false;
        alarm[0] = 5;
    }else if up &amp;&amp; equipOption &gt; 0 &amp;&amp; canSelect{
        equipOption -= 1;
        canMove = false;
        alarm[0] = 5;
    }   
}else if canMove &amp;&amp; currentMenu == "equipType"{
    // appear cursor
    if (up || down) &amp;&amp; !canSelect{
        canSelect = true;
        equipTypeOption = 1;
    }
    
    // go up and down main menu
    if (down &amp;&amp; equipTypeOption &lt; 4 &amp;&amp; canSelect) {
        equipTypeOption += 1;
        canMove = false;
        alarm[0] = 5;
    }else if up &amp;&amp; equipTypeOption &gt; 1 &amp;&amp; canSelect{
        equipTypeOption -= 1;
        canMove = false;
        alarm[0] = 5;
    }   
}else if canMove &amp;&amp; currentMenu == "skill"{
    // appear cursor
    if (up || down) &amp;&amp; !canSelect{
        canSelect = true;
        skillOption = 0;
    }
    
    // go up and down main menu
    if (down &amp;&amp; skillOption &lt; 3 &amp;&amp; canSelect) {
        skillOption += 1;
        canMove = false;
        alarm[0] = 5;
    }else if up &amp;&amp; skillOption &gt; 0 &amp;&amp; canSelect{
        skillOption -= 1;
        canMove = false;
        alarm[0] = 5;
    }   
}else if canMove &amp;&amp; currentMenu == "player"{
    // appear cursor
    if (up || down) &amp;&amp; !canSelect{
        canSelect = true;
        playerOption = 1;
    }
    
    // go up and down main menu
    if (down &amp;&amp; playerOption &lt; 3 &amp;&amp; canSelect) {
        playerOption += 1;
        canMove = false;
        alarm[0] = 5;
    }else if up &amp;&amp; playerOption &gt; 1 &amp;&amp; canSelect{
        playerOption -= 1;
        canMove = false;
        alarm[0] = 5;
    }   
}else if canMove &amp;&amp; currentMenu == "question"{
    // appear cursor
    if (up || down) &amp;&amp; !canSelect{
        canSelect = true;
        questionOption = 0;
    }
    
    // go up and down main menu
    if (down &amp;&amp; questionOption &lt; 1 &amp;&amp; canSelect) {
        questionOption += 1;
        canMove = false;
        alarm[0] = 5;
    }else if up &amp;&amp; questionOption &gt; 0 &amp;&amp; canSelect{
        questionOption -= 1;
        canMove = false;
        alarm[0] = 5;
    }   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Select Options</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if a &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "main"{
    if myOption == 1{
        playerChosen = 0
        playerCasting = 0;
        currentMenu = "item"
        canMove = false;
        alarm[0] = 5;
    }
    if myOption == 2{
        playerChosen = 0
        playerCasting = 0;
        lastMenu = "main"
        targetMenu = "skill"
        currentMenu = "player"
        canMove = false;
        alarm[0] = 5;
    }
    if myOption == 3{
        playerChosen = 0
        playerCasting = 0;
        equipTypeOption = 1;
        lastMenu = "main"
        targetMenu = "equipType"
        currentMenu = "player"
        canMove = false;
        alarm[0] = 5;
    }
    if myOption == 4{
        statusPage = 0;
        playerChosen = 0
        playerCasting = 0;
        lastMenu = "main"
        targetMenu = "status"
        currentMenu = "player"
        canMove = false;
        alarm[0] = 5;
    }
    if myOption == 5{
        saveGame();
        canMove = false;
        alarm[0] = 25;
    }
    else if myOption == 6{
        loadGame();
        canMove = false;
        alarm[0] = 25;
    }
    if myOption == 7{
        questionType = "quit"
        currentMenu = "question"
        canMove = false;
        alarm[0] = 15;
    }
}else if a &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "item"{
    lastMenu = "item"
    if global.item_useOnAlly[global.item[itemOption]]{
        currentMenu = "player"
        canMove = false;
        canSelect = false;
        alarm[0] = 5; 
    }else{
        lastMenu = "";
        quaff(global.item[itemOption],1,itemOption);
        canSelect = false;
        canMove = false;
        alarm[0] = 15;  
    }    
}else if a &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "equipType"{
        equipmentType = equipTypeOption;
        currentMenu = "equip"
        canMove = false;
        canSelect = false;
        alarm[0] = 5; 
}else if a &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "equip"{
        lastMenu = "";
        currentMenu = "main"
        equip(global.item[equipOption],playerCasting,equipmentType,equipOption);
        canSelect = false;
        canMove = false;
        alarm[0] = 15;    
}else if a &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "status"{
        if statusPage == 0{
            statusPage = 1;
            canSelect = false;
            canMove = false;
            alarm[0] = 15;    
        }else{
            lastMenu = "";
            currentMenu = "main"
            canSelect = false;
            canMove = false;
            alarm[0] = 15;
        }    
}
else if right &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "item"{
    lastMenu = "item"
    if global.item[itemOption] != 0 {
        itemDropOption = itemOption;
        questionType = "drop"
        currentMenu = "question"
        canSelect = false;
        canMove = false;
        alarm[0] = 15;
    }
}else if a &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "player"{
    if lastMenu == "item"{
        playerChosen = playerOption
        lastMenu = "";
        currentMenu = "item";
        quaff(global.item[itemOption],playerChosen,itemOption);
        canSelect = false;
        canMove = false;
        alarm[0]=15
    }else if lastMenu == "skill"{
        playerChosen = playerOption; 
        lastMenu = ""
        currentMenu = "main";
        cast(global.skill[playerCasting,skillOption],playerCasting,playerChosen);
    }else if lastMenu == "main"{
        playerCasting = playerOption;
        currentMenu = targetMenu;
    }
    canSelect = false;
    canMove = false;
    alarm[0] = 5;
}else if a &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "skill"{
    if global.skill_useOnAlly[global.skill[playerCasting,skillOption]]{
        lastMenu = "skill"
        currentMenu = "player"    
        canMove = false;
        canSelect = false;
        alarm[0] = 5;
    }else{
        lastMenu = "";
        currentMenu = "main";
        cast(global.skill[playerCasting,skillOption],playerCasting,1);
        canSelect = false;
        canMove = false;
        alarm[0] = 15;     
    }
}else if a &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "question"{
    if questionType == "drop"{
        if questionOption == 0{
            lastMenu = ""
            currentMenu = "main"
            canSelect = false;
            canMove = false;
            alarm[0] = 15;           
        }else if questionOption == 1{
            lastMenu = ""
            currentMenu = "main"
            canSelect = false;
            canMove = false;
            alarm[0] = 15;            
            drawBattleMessage("Dropped the " + global.item_name[global.item[itemDropOption]]+".")
            global.item[itemDropOption] = 0; 
        }
    }else if questionType == "quit"{
        if questionOption == 0{
            currentMenu = "main"
            canSelect = false;
            canMove = false;
            alarm[0] = 15; 
        }else if questionOption == 1{
            game_end();
        }    
    }      
}else if b &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "item"{ 
    lastMenu = "";
    currentMenu = "main";
    canSelect = false;
    canMove = false;
    alarm[0] = 5;
}else if b &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "status"{ 
    if statusPage = 0{
        lastMenu = "";
        currentMenu = "main";
        canSelect = false;
        canMove = false;
        alarm[0] = 5;
    }else{
        statusPage = 0;
        canSelect = false;
        canMove = false;
        alarm[0] = 5;
    }
}else if b &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "equip"{ 
    lastMenu = "";
    currentMenu = "main";
    canSelect = false;
    canMove = false;
    alarm[0] = 5;
}else if b &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "equipType"{ 
    lastMenu = "";
    currentMenu = "main";
    canSelect = false;
    canMove = false;
    alarm[0] = 5;
}else if b &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "skill"{ 
    lastMenu = "";
    currentMenu = "main";
    canSelect = false;
    canMove = false;
    alarm[0] = 5;
}else if b &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "player"{ 
    lastMenu = "";
    currentMenu = "main";
    canSelect = false;
    canMove = false;
    alarm[0] = 5;
}else if b &amp;&amp; canMove &amp;&amp; canSelect &amp;&amp; currentMenu == "question"{ 
    lastMenu = "";
    currentMenu = "main";
    canSelect = false;
    canMove = false;
    alarm[0] = 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw shit</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_font(fnt_menu);

// player 1
draw_sprite(global.sprite[1],0,56,32);
draw_text(84,32,global.name[1] + "   " + string(global.hp[1]) + " Hp" + "   Status: #" + global.status[1]);
draw_text(128,54,string(global.mp[1]) + " Mp");

// player 2
draw_sprite(global.sprite[2],0,56,96);
draw_text(84,96,global.name[2] + "   " + string(global.hp[2]) + " Hp" + "   Status: #" + global.status[2]);
draw_text(128,116,string(global.mp[2]) + " Mp"); 

// player 3
draw_sprite(global.sprite[3],0,56,160);
draw_text(84,160,global.name[3] + "   " + string(global.hp[3]) + " Hp" + "   Status: #" + global.status[3]);
draw_text(128,180,string(global.mp[3]) + " Mp");

// money
draw_text(372,224, string(global.money)+ " Gil");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>actual menu options + cursor</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// draw mainMenu items (see defintiions for them in create event above)
if currentMenu == "main"{   
    draw_text(mainMenu[1,1],mainMenu[1,2],mainMenu[1,0])
    draw_text(mainMenu[2,1],mainMenu[2,2],mainMenu[2,0])
    draw_text(mainMenu[3,1],mainMenu[3,2],mainMenu[3,0])
    draw_text(mainMenu[4,1],mainMenu[4,2],mainMenu[4,0])
    draw_text(mainMenu[5,1],mainMenu[5,2],mainMenu[5,0])
    draw_text(mainMenu[6,1],mainMenu[6,2],mainMenu[6,0])
    draw_text(mainMenu[7,1],mainMenu[7,2],mainMenu[7,0])
    
    // draw cursor
    if myOption != 0 {
        draw_sprite(spr_finger,0, mainMenu[myOption,1]- 24, mainMenu[myOption,2])
    }
}else if currentMenu == "status"{   
    if statusPage = 0{
        draw_text(294,22, "---"+global.name[playerCasting]+ "---" +"#Level: " + string(global.level[playerCasting])
        +"#Exp: " + string(global.xp[playerCasting]) + "#Next Level: " + string(global.xp_up[playerCasting])
        +"#Class: " + global.class[playerCasting]
        +"##Attack: " + string(global.atk[playerCasting])
        +"#Defense: " + string(global.def[playerCasting]) 
        +"#Power: " + string(global.pow[playerCasting]) 
        +"#Resist: " + string(global.res[playerCasting]) 
        +"#Speed: " + string(global.spd[playerCasting])  
        )
    }else{
        draw_text(294,22,"---" + global.name[playerCasting] +"---" + "#Level: " + string(global.level[playerCasting])
        +"#Exp: " + string(global.xp[playerCasting]) + "#Next Level: " + string(global.xp_up[playerCasting])
        +"#Class: " + global.class[playerCasting]
        +"##--Equipment--"
        +"#Head: " + global.item_name[global.head[playerCasting]]
        +"#Armor: " + global.item_name[global.armor[playerCasting]]
        +"#Weapon: " + global.item_name[global.weapon[playerCasting]] 
        +"#Accessory: " + global.item_name[global.accs[playerCasting]]   
        ) 
    }
    
}else if currentMenu == "equipType"{   
    draw_text(mainMenu[1,1],mainMenu[1,2],"Head")
    draw_text(mainMenu[2,1],mainMenu[2,2],"Armor")
    draw_text(mainMenu[3,1],mainMenu[3,2],"Weapon")
    draw_text(mainMenu[4,1],mainMenu[4,2],"Accessory")
    
    // draw cursor
    if equipTypeOption != 0 {
        draw_sprite(spr_finger,0, mainMenu[equipTypeOption,1]- 24, mainMenu[equipTypeOption,2])
    }
}else if currentMenu == "item"{
    draw_text(mainMenu[1,1],mainMenu[1,2],global.item_name[global.item[itemOption]]);
    draw_text(mainMenu[2,1],mainMenu[2,2],global.item_name[global.item[itemOption + 1]])
    draw_text(mainMenu[3,1],mainMenu[3,2],global.item_name[global.item[itemOption + 2]])
    draw_text(mainMenu[4,1],mainMenu[4,2],global.item_name[global.item[itemOption + 3]])
    draw_text(mainMenu[5,1],mainMenu[5,2],global.item_name[global.item[itemOption + 4]])
    draw_text(mainMenu[6,1],mainMenu[6,2],global.item_name[global.item[itemOption + 5]])
    
     // draw cursor
    if itemOption != -1 {
        draw_sprite(spr_finger,0, 308, 32)
    }
    if itemOption &gt; 0{
        draw_sprite(spr_uparrow,0,288,32)
    }
    draw_sprite(spr_downarrow,0,288,176);
    draw_text(392, 24, string(itemOption)+"/64")
    draw_text(364, 176, "--&gt; Drop")
    
    //draw descr.
    draw_text(62,216,global.item_info[global.item[itemOption]]);
}else if currentMenu == "equip"{
    draw_text(mainMenu[1,1],mainMenu[1,2],global.item_name[global.item[equipOption]]);
    draw_text(mainMenu[2,1],mainMenu[2,2],global.item_name[global.item[equipOption + 1]])
    draw_text(mainMenu[3,1],mainMenu[3,2],global.item_name[global.item[equipOption + 2]])
    draw_text(mainMenu[4,1],mainMenu[4,2],global.item_name[global.item[equipOption + 3]])
    draw_text(mainMenu[5,1],mainMenu[5,2],global.item_name[global.item[equipOption + 4]])
    draw_text(mainMenu[6,1],mainMenu[6,2],global.item_name[global.item[equipOption + 5]])
    
     // draw cursor
    if equipOption != -1 {
        draw_sprite(spr_finger,0, 308, 32)
    }
    if equipOption &gt; 0{
        draw_sprite(spr_uparrow,0,288,32)
    }
    draw_sprite(spr_downarrow,0,288,176);
    draw_text(392, 24, string(equipOption)+"/64")
    
    //draw descr.
    draw_text(62,216,global.item_info[global.item[equipOption]]);
}else if currentMenu == "skill"{
    draw_text(mainMenu[1,1],mainMenu[1,2],global.skill_name[global.skill[playerCasting,skillOption]]);
    draw_text(mainMenu[2,1],mainMenu[2,2],global.skill_name[global.skill[playerCasting,skillOption + 1]]);
    draw_text(mainMenu[3,1],mainMenu[3,2],global.skill_name[global.skill[playerCasting,skillOption + 2]]);
    draw_text(mainMenu[4,1],mainMenu[4,2],global.skill_name[global.skill[playerCasting,skillOption + 3]]);

     // draw cursor
    if skillOption != -1 {
        draw_sprite(spr_finger,0, 308, 32)
    }
        
   
   draw_text(62,224,global.skill_data[global.skill[playerCasting,skillOption]]); 
    
}else if currentMenu == "question"{
    if questionType == "quit"{
        question = "Really quit?"
        answer1 = "No"
        answer2 = "Yes"
    }else if questionType == "drop"{
        question = "Drop the " + global.item_name[global.item[itemDropOption]] + "?"
        answer1 = "No"
        answer2 = "Yes"
    }
    draw_text(300,24,question);
    draw_text(mainMenu[2,1],mainMenu[2,2],answer1);
    draw_text(mainMenu[3,1],mainMenu[3,2],answer2);
    
    // draw cursor
    if questionOption == 0 {
        draw_sprite(spr_finger,0, 308, mainMenu[2,2])
    }else{
       draw_sprite(spr_finger,0, 308, mainMenu[3,2]) 
    }
}

if currentMenu == "player"{
    if lastMenu == "item"{
        draw_text(mainMenu[1,1],mainMenu[1,2],global.item_name[global.item[itemOption]]);
        draw_text(mainMenu[2,1],mainMenu[2,2],global.item_name[global.item[itemOption + 1]])
        draw_text(mainMenu[3,1],mainMenu[3,2],global.item_name[global.item[itemOption + 2]])
        draw_text(mainMenu[4,1],mainMenu[4,2],global.item_name[global.item[itemOption + 3]])
        draw_text(mainMenu[5,1],mainMenu[5,2],global.item_name[global.item[itemOption + 4]])
        draw_text(mainMenu[6,1],mainMenu[6,2],global.item_name[global.item[itemOption + 5]])
    
        // draw cursor
        if itemOption != -1 {
            draw_sprite(spr_finger,0, 308, 32)
        }
        if itemOption &gt; 0{
            draw_sprite(spr_uparrow,0,288,32)
        }
        draw_sprite(spr_downarrow,0,288,176);
        draw_text(392, 24, string(itemOption)+"/64")
        draw_text(364, 176, "--&gt; Drop")    
    }else if lastMenu == "main" &amp;&amp; targetMenu == "skill"{
        draw_text(mainMenu[1,1],mainMenu[1,2],mainMenu[1,0])
        draw_text(mainMenu[2,1],mainMenu[2,2],mainMenu[2,0])
        draw_text(mainMenu[3,1],mainMenu[3,2],mainMenu[3,0])
        draw_text(mainMenu[4,1],mainMenu[4,2],mainMenu[4,0])
        draw_text(mainMenu[5,1],mainMenu[5,2],mainMenu[5,0])
        draw_text(mainMenu[6,1],mainMenu[6,2],mainMenu[6,0])
        draw_text(mainMenu[7,1],mainMenu[7,2],mainMenu[7,0])
        
        // draw cursor
        if myOption != 0 {
            draw_sprite(spr_finger,0, mainMenu[myOption,1]- 24, mainMenu[myOption,2])
        }
    }else if lastMenu == "skill"{
        draw_text(mainMenu[1,1],mainMenu[1,2],global.skill_name[global.skill[playerCasting,skillOption]]);
        draw_text(mainMenu[2,1],mainMenu[2,2],global.skill_name[global.skill[playerCasting,skillOption + 1]]);
        draw_text(mainMenu[3,1],mainMenu[3,2],global.skill_name[global.skill[playerCasting,skillOption + 2]]);
        draw_text(mainMenu[4,1],mainMenu[4,2],global.skill_name[global.skill[playerCasting,skillOption + 3]]);

        // draw cursor
        if skillOption != -1 {
            draw_sprite(spr_finger,0, 308, 32)
        }
    }
    
    if lastMenu == "main"{
        draw_text(62,224,"Which player?"); 
    }else if lastMenu == "skill"{
        draw_text(62,224,"Use " + global.skill_name[global.skill[playerCasting,skillOption]] + " on whom?");   
    }else if lastMenu == "item"{
        draw_text(62,224,"Use " + global.item_name[global.item[itemOption]] + " on whom?");    
    }
    
    // draw cursor
    draw_sprite(spr_finger,0, playerMenu[playerOption,1], playerMenu[playerOption,2])
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>debig</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(4,4, global.field_room);


//draw_text(4,4, "Current Menu = " + currentMenu);
//draw_text(4,20, "Last Menu = " + lastMenu);
//draw_text(4,36, "Target Menu = " + targetMenu);

//draw_text(4,4,"PlayerOption: " + string(playerOption));
//draw_text(4,20,"PlayerCasting " + string(playerCasting));
//draw_text(4,36,"PlayerChosen " + string(playerChosen));


if currentMenu == "skill"{
   // draw_text(62,232,"Skill slot: " +string(skillOption));
    //draw_text(62,248,"Skill: " + string(global.skill[playerChosen,skillOption]));
    //draw_text(62,264,"Useable on Ally: " + string(global.skill_useOnAlly[global.skill[playerChosen,skillOption]]));

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
